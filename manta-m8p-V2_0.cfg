#############################################################################
# This file contains common pin mappings for the BIGTREETECH Manta M8P V2.0 
# KAMP +SENSORLESS HOMING + SHELL COMMAND FOR INPUT SHAPING#
#############################################################################
# To use this config, the firmware should be compiled for the
# STM32H723 with a "128KiB bootloader" "25 MHz crystal"
# and "USB (on PA11/PA12)", "CAN bus (on PD0/PD1)" or Serial (on USART1 PA10/PA9).

# See docs/Config_Reference.md for a description of parameters.
#[include shell_command.cfg]
[include sensorless.cfg]
[include mainsail.cfg]
[include stealthburner_leds.cfg]
[include NozzleClean.cfg]
[include led_progress.cfg]
[include KAMP_Settings.cfg]
[include ./KAMP/Adaptive_Meshing.cfg]
[include ./KAMP/Line_Purge.cfg]
#[include ./KAMP/Voron_Purge.cfg]
#[include ./KAMP/Smart_Park.cfg]

[exclude_object]

[force_move]
enable_force_move: true

#####################################################################
#   UUID Setting
#####################################################################
[mcu]
canbus_uuid:8d8160cc0a82 	#YOURS WILL BE DIFFERENT - CHANGE IT  TO MATCH

[mcu EBBCan]
canbus_uuid: b57b8507b46f 	#YOURS WILL BE DIFFERENT - CHANGE IT  TO MATCH

[printer]
kinematics: corexy
max_velocity: 300  
max_accel: 8000	    #Max 4000			
max_z_velocity: 15 		#Max 15 for 12V TMC Drivers, can increase for 24V	
max_z_accel: 350
square_corner_velocity: 5.0

#####################################################################
# 	X/Y Stepper Settings
#####################################################################

## X Stepper on Motor1(B Motor rear left)
[stepper_x]
step_pin: PE6
dir_pin: PE5
enable_pin: !PC14
microsteps: 64
rotation_distance: 40
endstop_pin: tmc2209_stepper_x:virtual_endstop
homing_positive_dir: true

#endstop_pin: ^PF4
position_min: 0
position_endstop: 350
position_max: 350

##--------------------------------------------------------
homing_speed: 100   #Max 100
homing_retract_dist: 5
homing_positive_dir: true

[tmc2209 stepper_x]
uart_pin: PC13
interpolate: False
run_current: 1.2
sense_resistor: 0.110
stealthchop_threshold: 0

driver_SGTHRS: 255
diag_pin: ^PF4 # use the same pin that was previously the endstop_pin!


## Y Stepper on Motor2 (A Motor rear right)
[stepper_y]
step_pin: PE2
dir_pin: PE1
enable_pin: !PE4
microsteps: 64

rotation_distance: 40
#endstop_pin: ^PF3
endstop_pin: tmc2209_stepper_x:virtual_endstop
position_min: 0
position_endstop: 350
position_max: 350
##---------------------------------------------------------
homing_speed: 100	#MAX 100
homing_retract_dist: 5
homing_positive_dir: true

tmc2209 stepper_y]
uart_pin: PE3
interpolate: False
run_current: 1.2
sense_resistor: 0.110
stealthchop_threshold: 0

driver_SGTHRS: 255
diag_pin: ^^PF3 # use the same pin that was previously the endstop_pin!


#####################################################################
# 	Z Stepper Settings
#####################################################################

## Z0 Stepper - Front Left on MOTOR3
[stepper_z]
step_pin: PB8
dir_pin: !PB7
enable_pin: !PE0
microsteps: 16
rotation_distance: 40
gear_ratio: 80:16
#endstop_pin: ^PF2
#endstop_pin: ^PF5 
endstop_pin: probe:z_virtual_endstop
position_max: 340

##-------------------------------------------------------------------

position_min: -5
homing_speed: 8
second_homing_speed: 3
homing_retract_dist: 3

#[stepper_]##	Z1 Stepper - Rear Left on Motor4
[stepper_z1]
step_pin: PB4
dir_pin: PB3
enable_pin: !PB6
#endstop_pin: ^PF1
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16

[tmc2209 stepper_z1]
uart_pin: PB5
interpolate: True
run_current: 1.0
sense_resistor: 0.110
stealthchop_threshold: 0

##	Z2 Stepper - Rear Right on Motor5
[stepper_z2]
step_pin: PG13
dir_pin: PG12
enable_pin: !PG15
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16

[tmc2209 stepper_z2]
uart_pin: PG14
interpolate: True
run_current: 1.0
sense_resistor: 0.110
stealthchop_threshold: 0

##	Z3 Stepper - Front Right on Motor6
[stepper_z3]
step_pin: PG9
dir_pin: PD7
enable_pin: !PG11
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16

[tmc2209 stepper_z3]
uart_pin: PG10
interpolate: True
run_current: 1.0
sense_resistor: 0.110
stealthchop_threshold: 0


[extruder]
step_pin: EBBCan: PD0
dir_pin: EBBCan: PD1
enable_pin: !EBBCan: PD2
microsteps: 16
rotation_distance: 21.928277 # standard Recommended voron start point


gear_ratio: 50:10
microsteps: 16
full_steps_per_rotation: 200
nozzle_diameter: 0.400
filament_diameter: 1.750
max_extrude_cross_section: 10

heater_pin: EBBCan: PB13
Sensor_type: GENERIC 3950#ATC Semitec 104NT-4-R025H42G
sensor_pin: EBBCan: PA3 #if you renamed your board make sure to match the board assignment in front of the pin
#sensor_type:MAX31865
#sensor_pin: EBBCan: PA4  # if your can mcu is called something other than EBBCan, change that
#spi_bus: spi1
#rtd_nominal_r: 1000   # PT1000 should be 1000.  PT100 should be 100
#rtd_reference_r: 4300 # PT1000 should be 4300.  PT100 should be 430
#rtd_num_of_wires: 2   # This is the number of wires connected to the header.  Either 2 (typical) or 4.
pressure_advance: 0.040
control: pid
pid_Kp: 21.527
pid_Ki: 1.063
pid_Kd: 108.982
min_temp: 0
max_temp: 300
min_extrude_temp: 0                                   ## use this for estep calbration only##
#min_extrude_temp: 230                                ## enable this ones you have done extruder calibration steps and comment out the above line.
max_extrude_cross_section: 5# KAMP setting needed
max_extrude_only_distance: 101

[tmc2209 extruder]
uart_pin: EBBCan: PA15
run_current: 0.3
stealthchop_threshold: 999999


[heater_bed]
heater_pin: PA1 #PF5
sensor_pin: PB1 
sensor_type: GENERIC 3950
max_power: 1.0
min_temp: 0
max_temp: 120
control: pid
pid_kp: 58.437
pid_ki: 2.347
pid_kd: 363.769

[temperature_sensor buildplate]
sensor_type: Generic 3950
sensor_pin: PB0
min_temp: -40
max_temp: 120

[temperature_sensor chamber]
sensor_type: Generic 3950
sensor_pin: PC5
min_temp: -40
max_temp: 120

[temperature_sensor EBB_NTC]
sensor_type: Generic 3950
sensor_pin: EBBCan: PA2
min_temp: -40
max_temp: 100

[temperature_sensor CB1]
sensor_type: temperature_host



[probe]
pin: ^EBBCan: PB5
X_offset: 0
Y_offset: 0
#z_offset: 0
speed: 10.0
samples: 3
samples_result: median
sample_retract_dist: 3.0
samples_tolerance: 0.006
samples_tolerance_retries: 3

##################################################################
#             TAP MACRO TO CHECK OVER 150DEGREES                  #
##################################################################

## THE BELOW CODE STOPS THE TAP HOMING INTO THE BED AT PROBE TEMPS OVER 150Â°C##
activate_gcode:
    {% set PROBE_TEMP = 150 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{ PROBE_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
        {% endif %}
    {% endif %}

[multi_pin controller_fans]
pins: PF7,PF9

[controller_fan controller_fan]
##  Controller fan
pin: multi_pin:controller_fans
max_power: 0.4
kick_start_time: 0.5
heater: heater_bed



[heater_fan nevermore_fan]
#  Exhaust fan - Nevermore Filter
pin: PF8 #3rd from left below voltage jumpers
max_power: 1.0
shutdown_speed: 0.0
kick_start_time: 5.0
heater: heater_bed
heater_temp: 60
fan_speed: 1.0 



[quad_gantry_level]

gantry_corners:
	-60,-10
	410,420
points:
	40,25
	40,275
	300,275
	300,25

#--------------------------------------------------------------------
speed: 300
horizontal_move_z: 10
retries: 5
retry_tolerance: 0.0075
max_adjust: 10

[bed_mesh]

speed: 300
horizontal_move_z: 5
mesh_min: 10,10
mesh_max: 340,340
probe_count: 5,5
algorithm: bicubic
bicubic_tension: 0.2

[adxl345]
cs_pin: EBBCan: PB12
spi_software_sclk_pin: EBBCan: PB10
spi_software_mosi_pin: EBBCan: PB11
spi_software_miso_pin: EBBCan: PB2
axes_map: z,-y,x
# to test follow these instructions - 
#  type SHAPER_CALIBRATE 	
# let run it s course and type  	SAVE_CONFIG
# YOU WILL NEEED TO SSH INTO DEVICE AND NAVIGATE TO /TMP FILE (IF YOU HAVE AN SB2209 IT WILL CREATE A FILE CALLED
# calibration_data_x_20231006_111358.csv - OR SOMETHING CLOSE TO THAT AND calibration_data_y_20231006_111358.csv
# FIND THESE AND CHANGE THE NAMES TO resonances_x_*.csv (* LEAVE YOUR NUMBERS THAT ARE THERE IN THIS FILE NAME AND DO SAME FOR Y AXIS
#  CONVERT TO A GRAPH PUT IN THESE COMMANDS:
# 		~/klipper/scripts/calibrate_shaper.py /tmp/resonances_x_*.csv -o /tmp/shaper_calibrate_x.png
#		~/klipper/scripts/calibrate_shaper.py /tmp/resonances_y_*.csv -o /tmp/shaper_calibrate_y.png
#	GO  TO THE TMP AND YOU WILL FIND 2 X PNG PICTURE FILES. SAVE TO YOUR PC AND YOU CAN THEN LOOK AT THE DATA IN GRAPH FORM
[resonance_tester]
probe_points: 175, 175, 20
accel_chip: adxl345
###########################################################
#                    # DISPLAY #                          #
###########################################################

[display]
#	mini12864 LCD Display
lcd_type: uc1701
cs_pin: EXP1_3
a0_pin: EXP1_4
rst_pin: EXP1_5
encoder_pins: ^EXP2_5, ^EXP2_3
click_pin: ^!EXP1_2
contrast: 63
spi_software_miso_pin: EXP2_1
spi_software_mosi_pin: EXP2_6
spi_software_sclk_pin: EXP2_2
## Some micro-controller boards may require an spi bus to be specified: 
#spi_bus: spi 
## Alternatively, some micro-controller boards may work with software spi: 
#spi_software_miso_pin: EXP2_1 
#spi_software_mosi_pin: EXP2_6 
#spi_software_sclk_pin: EXP2_2 
[output_pin beeper]
pin: EXP1_1
[neopixel btt_mini12864]
#	To control Neopixel RGB in mini12864 display
pin: EXP1_6
chain_count: 3
initial_RED: 0.4
initial_GREEN: 0.4
initial_BLUE: 0.4
color_order: RGB

##	Set RGB values on boot up for each Neopixel. 
##	Index 1 = display, Index 2 and 3 = Knob
[delayed_gcode setdisplayneopixel]
initial_duration: 1
gcode:
       SET_LED LED=btt_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=1 TRANSMIT=0
       SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
       SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3 



#################################################
################### Disco Led ###################
#################################################
[neopixel disco1]
pin: PD15
chain_count: 25
color_order: BGRW
initial_RED: 1.0
initial_GREEN: 1.0
initial_BLUE: 1.0

[neopixel disco2]
pin: PB15
chain_count: 25
color_order: BGRW
initial_RED: 1.0
initial_GREEN: 1.0
initial_BLUE: 1.0


[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE7, EXP1_2=PG1,
    EXP1_3=PG0, EXP1_4=PF15,
    EXP1_5=PF14, EXP1_6=PF13,    # Slot in the socket on this side
    EXP1_7=PF12, EXP1_8=PF11,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PE13, EXP2_2=PE12,
    EXP2_3=PE15, EXP2_4=PE11,
    EXP2_5=PE10, EXP2_6=PE14,      # Slot in the socket on this side
    EXP2_7=PE8, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<NC>
##------------------------------------------------------------------------
# Enable object exclusion
[exclude_object]

# Enable arcs support
[gcode_arcs]
resolution: 0.3

#####################################################################
#   Macros
#####################################################################


#	REV 1.4 07-10-23 
[gcode_macro PARK]
gcode:
    {% set th = printer.toolhead %}
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} Z30  

[gcode_macro G32]
gcode:
   SAVE_GCODE_STATE NAME=STATE_G32
   G90
   G28
   QUAD_GANTRY_LEVEL
   G28
   PARK
   RESTORE_GCODE_STATE NAME=STATE_G32


[gcode_macro INPUT_SHAPER_CALIBRATE]
gcode:
   SHAPER_CALIBRATE

# Enable object exclusion
[exclude_object]

# Enable arcs support
[gcode_arcs]
resolution: 0.3


[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
    G32                            ; home all axes
    BED_MESH_CALIBRATE 

    G90                            ; absolute positioning
    G1 Z20 F3000                   ; move nozzle away from bed
   

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
   M400                           ; wait for buffer to clear
   G92 E0                         ; zero the extruder
   G1 E-5.0 F1800                 ; retract filament
   TURN_OFF_HEATERS
    
   G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan
    
    BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END

## End-Stop 5
#[filament_switch_sensor material_0]
#switch_pin: PF0
#[filament_switch_sensor material_1]
#switch_pin: PC15

## Motor7
#[extruder2]
#step_pin: PD4
#dir_pin: PD3
#enable_pin: !PD6
#heater_pin: PA3 # HE2
#sensor_pin: PC4 # T2
#...

## Motor8
#[extruder3]
#step_pin: PC7
#dir_pin: PC8
#enable_pin: !PD2
#heater_pin: PA5 # HE3
#sensor_pin: PA7 # T3
##...

#[filament_switch_sensor material_1]
#switch_pin: PC15
##-------------------------------------------------------------


#[fan_generic soc-fan]
#pin: host:gpio79  #CB1
#pin: host:gpio26  #CM4

# Fan0
#[fan]
#pin: PF7

## Fan1
#[heater_fan fan1]
#pin: PF9

## Fan2
#[heater_fan fan2]
#pin: PF6

## Fan3
#[heater_fan fan3]
#pin: PA8

## Fan4
#[heater_fan fan4]
#pin: PA4

## Fan5
#[heater_fan fan5]
#pin: PA6
#tachometer_pin: PC2

## Fan6
#[heater_fan fan6]
#pin: PA2
#tachometer_pin: PC1



#[adxl345]
#cs_pin: PA15
#spi_bus: spi3a

#[bltouch]
#sensor_pin: PD13
#control_pin: PD12

## Proximity switch
#[probe]
#pin: PD8

#[output_pin ps_on_pin]
#pin: PD14

#[neopixel my_neopixel_1]
#pin: PD15

#[hall_filament_width_sensor]
#adc1: PC0
#adc2: PF10
